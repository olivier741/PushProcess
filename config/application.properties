server.port=8082

# ===============================
# APP CONFIGURATION
# ===============================
application.sender.numberThread=2
application.sender.threadPool=2
application.sender.sleep-duration=20
application.sender.maxQueue=100

application.push.numberThread=1
application.push.threadPool=1
application.push.sleep-duration=20
application.push.mo-maxRow=100
application.push.scheduler-poolSize=10
application.push.scheduler-fixedDelay=2000


# ===============================
# KAFKA ZOOKEEPER
# ===============================
spring.kafka.zookeeper.host=10.124.146.147:2181
spring.kafka.topic.partitions=10
spring.kafka.topic.replication=2
spring.kafka.topic.session-timeOut-in-ms=2000
spring.kafka.topic.connection-timeOut-in-ms=2000


# ===============================
# KAFKA PRODUCER
# ===============================
#spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers= 10.124.146.147:9092,10.124.146.147:9093
#spring.kafka.producer.group-id= process-producer-group
#spring.kafka.producer.compression-type=none
spring.kafka.producer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.acks=all
#spring.kafka.producer.linger.ms=100
#spring.kafka.producer.batch.size=65536
#spring.kafka.producer.compression-type=snappy
#spring.kafka.producer.max-in-flight-requests-per-connection=1
#spring.kafka.producer.retries=3
#spring.kafka.producer.request-timeout-ms=15000
#spring.kafka.producer.retry-backoff-ms=1000
#spring.kafka.producer.partitioner-class=org.apache.kafka.clients.producer.internals.DefaultPartitioner
spring.kafka.producer.topic= mt-chocho

# ===============================
# LOGGING
# ===============================

logging.level.root=INFO
logging.file=log/full/full.log
logging.pattern.rolling-file-name=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n

# ===============================
# DATABASE POOL
# ===============================

spring.datasource.tomcat.initial-size=15
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=15
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.default-auto-commit=true  

spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000

spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.id.new_generator_mappings=false

# ===============================
# DATABASE H2
# ===============================
#spring.h2.console.enabled=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect


# ===============================
# DATABASE MARIADB
# ===============================

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/springBootWeb
spring.datasource.username=olivier
spring.datasource.password=abc@1234


sping.flyway.enabled= true
sping.flyway.check-location = true
sping.flyway.locations = classpath:/db/migration

spring.flyway.baseline-on-migrate = true
#spring.flyway.baselineOnMigrate = true


# ===============================
# JPA / HIBERNATE MARIADB
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect


#------------------------------------------------------------------------------


# ===============================
# DATABASE MYSQL
# ===============================
 
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
#spring.datasource.username=root
#spring.datasource.password=12345
 
# ===============================
# JPA / HIBERNATE MYSQL
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#------------------------------------------------------------------------------

# ===============================
# DATABASE  ORACLE
# ===============================
 
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:db12c
#spring.datasource.username=mydatabase
#spring.datasource.password=12345
  
# ===============================
# JPA / HIBERNATE ORACLE
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#------------------------------------------------------------------------------

# ===============================
# DATABASE SQL_SERVER
# ===============================
 
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.url=jdbc:sqlserver://localhost\\SQLEXPRESS:1433;databaseName=mydatabase
#spring.datasource.username=sa
#spring.datasource.password=12345
 
 
# ===============================
# JPA / HIBERNATE SQL_SERVER
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

#------------------------------------------------------------------------------

# ===============================
# DATABASE CONNECTION PostGres
# ===============================
 
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
#spring.datasource.username=postgres
#spring.datasource.password=12345
 
# ===============================
# JPA / HIBERNATE PostGres
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
 
 
# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

